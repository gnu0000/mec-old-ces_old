/*--------------------------------------------------------------------------+
|                                                                           |
|       Copyright (c) 1992 by AASHTO.  All Rights Reserved.                 |
|                                                                           |
|       This program module is part of BAMS/CES, a module of BAMS,          |
|       The American Association of State Highway and Transportation        |
|       Officials' (AASHTO) Information System for Managing Transportation  |
|       Programs, a proprietary product of AASHTO, no part of which may be  |
|       reproduced or transmitted in any form or by any means, electronic,  |
|       mechanical, or otherwise, including photocopying and recording      |
|       or in connection with any information storage or retrieval          |
|       system, without permission in writing from AASHTO.                  |
|                                                                           |
+--------------------------------------------------------------------------*/


/*
 * fund.met
 * This file contains metadata for the catalog windows.
 * This file is used by buildres to build .bin metadata files.
 * These .bin files are used by the resource compiler to build
 *  custom resources.
 */


#include "..\include\itiwin.h"
#include "..\include\winid.h"
#include "..\include\metadecl.h"
#include "dialog.h"





:static  static.bin
//
//   generates data for
//   ItiMbQueryStaticMetrics   (HWND hwnd, USHORT uId, PWNDMET pWndMet)//
//   ItiMbQueryListMetrics   (HWND hwnd, USHORT uId, PWNDMET pWndMet)//
//
// USHORT                                        RECTS               USHORT     LONG                  LONG
//
// Static Window ID  add            change       xpos ypos xsiz ysiz CoordType  Window Options        Background Color
//-------------------------------------------------------------------------------------------------------------------------
FundCatS,     FundD,  FundD, 4,   27,  310, 133, COORD_RNG, ITI_STATICOPTIONS,    ITI_STATICBACKGROUND





:CHILD child.bin
//
//   generates data for
//   ItiMbGetChildInfo (HWND hwnd, USHORT uId, PCHD *ppCHD)
//
//  Coordinate type tells how the position rectangle should
//    be handled.
//    FALSE -- DLG coordinates, Top Left origin,
//               Xpos,Ypos,Xsize,YSize
//    TRUE  -- Margin Sizes (listwindows size with parent)
//               LeftMargin,TopMargin,RightMargin,BottomMargin
//
// USHORT             USHORT                 USHORT                                    RECTS               USHORT
//
// Parents Window ID  Type Child Window ID   uKind      add             change         <-   ^    ->   v    Coord
//-----------------------------------------------------------------------------------------------------------
FundCatS,      FundCatL,         ITIWC_LIST,  FundD, FundD,  0,   0,   0,   0,   COORD_REL




:list list.bin
//
//   generates data for
//   ItiMbQueryStaticMetrics (HWND hwnd, USHORT uId, PWNDMET pWndMet)//
//   ItiMbQueryListMetrics   (HWND hwnd, USHORT uId, PWNDMET pWndMet)//
//
// yClient
// These are specified to override the default line
// sizing in list windows
// leave 0 to use default spacing
//
// USHORT                     LONG                   LONG                        LONG                     USHORT USHORT  USHORT
//
// List Window ID             Window Options         Background Color            Label Bkg Color           Label ydata   Button Window ID
//---------------------------------------------------------------------------------------------------------------------------------------
FundCatL,                ITI_LISTOPTIONSHV,     ITI_LDATABACKGROUND,        ITI_LLABELBACKGROUND,      0,   0,      0




:DATA data.bin format.bin
//
//   generates data for
//   ItiMbGetDataInfo  (HWND hwnd, USHORT uId, PEDT *ppEDT)
//
// uIndex Tells which column to use in the query. 1st col is 0
//
// USHORT                    USHORT                  RECTS (DLG|UL|RNG)  USHORT     LONG               LONG             NAME              PSZ
//
// Window ID                 Next Window ID          xpos ypos xsiz ysiz CoordType  Foreground Color   Txt Flags        Col Name          Format String
//--------------------------------------------------------------------------------------------------------------------------------------------------------
FundCatL,               0,                      2,   0,   36,  8,   COORD_RNG, ITI_SDATACOLOR,    ITI_SDATAFLAGS,  FundID,           "String"
FundCatL,               0,                      44,  0,   225, 8,   COORD_RNG, ITI_SDATACOLOR,    ITI_SDATAFLAGS,  Name,             "String"
FundCatL,               0,                      12,  8,   278, 8,   COORD_RNG, ITI_SDATACOLOR,    ITI_SDATAFLAGS,  Description,      "String"




:label label.bin labeltxt.bin
//
//   generates data for
//   ItiMbGetLabelInfo (HWND hwnd, USHORT uId, PEDT *ppEDT)//
//
// uQuery is not used
// uIndex tells which string to use
// strings are in labeltxt.txt
//
// USHORT                      USHORT                  RECTS (DLG|UL|RNG)  USHORT     LONG                LONG               char []
//
// Window ID                   Next Window ID          xposypos  xsiz ysiz CoordType  Foreground Color   Txt Flags          Label String
//------------------------------------------------------------------------------------------------------------------------------------------------------
FundCatL,                 0,                      2,   0,   36,  8,   COORD_RNG, ITI_LLABELCOLOR,   ITI_LLABELFLAGS,   "Fund/"
FundCatL,                 0,                      44,  0,   225, 8,   COORD_RNG, ITI_LLABELCOLOR,   ITI_LLABELFLAGS,   "Name"
FundCatL,                 0,                      12,  8,   278, 8,   COORD_RNG, ITI_LLABELCOLOR,   ITI_LLABELFLAGS,   "Description




:query query.bin
//
//   generates data for
//   ItiMbGetQueryText (HWND hwnd, USHORT uId, PSZ  **pppsz)//
//
// Multiple strings for the same window ID
// are concatenated together at this time
//
// USHORT             char []
//
// Window ID          Query String
//--------------------------------------------------------------------------------------------------------
FundCatL,        "SELECT FundID, Name, Description, FundKey "
FundCatL,        "FROM Fund "
FundCatL,        "WHERE Deleted IS NULL "
FundCatL,        "ORDER BY FundID "

FundD,         "SELECT FundID, Name, Description, FundKey "
FundD,         "FROM Fund "
FundD,         "WHERE FundKey = %FundKey "


:title title.bin
//
//   generates data for
//   ItiMbGetTitleText (HWND hwnd, USHORT uId, PSZ  *ppsz)//
//
// USHORT                     char []
//
// Window ID                  Window Title
//--------------------------------------------------------------------
FundCatS,              "Fund Catalog"





:Dialog Dialog.bin DlgFmat.bin
//
//
// Dlg Id     Add Query ID  Change Query ID  Col Name          CtlID            Format
//---------------------------------------------------------------------------------------
FundD, FundD, FundD,    FundID,           DID_FUNDID,     "String", "String"
FundD, FundD, FundD,    Name,             DID_FUNDNAME,   "String", "String"
FundD, FundD, FundD,    Description,      DID_FUNDDESCR,  "String", "*String"



:query update.bin
//
// This is the metadata for the update SQL.
//
// Multiple strings for the same window ID
// are concatenated together at this time
//
// USHORT             char []
// Window ID          Query String
//-------------------------------------------------------------------------
FundD,         "UPDATE Fund "
FundD,         "SET "
FundD,         "FundID=@FundID, "
FundD,         "Name=@Name, "
FundD,         "Description=@Description "
FundD,         "WHERE FundKey = %FundKey "


:query lock.bin
//
// This is the metadata for the SQL that locks a row just before the
// database is updated.
//
// Multiple strings for the same window ID
// are concatenated together at this time
//
// USHORT             char []
// Window ID          Query String
//-------------------------------------------------------------------------
FundD,         "SELECT FundID, Name, Description "
FundD,         "FROM Fund HOLDLOCK "
FundD,         "WHERE FundKey = %FundKey "


:query insert.bin
//
// This is the metadata for the insert SQL.
//
// Multiple strings for the same window ID
// are concatenated together at this time
//
// USHORT             char []
// Window ID          Query String
//-------------------------------------------------------------------------
FundD,         "INSERT INTO Fund "
FundD,         "(FundKey,FundID,Name,Description) "
FundD,         "VALUES "
FundD,         "(@NewKey,@FundID,@Name,@Description) "



:query delete.bin
//
// This is the metadata for the delete SQL.
//
// Multiple strings for the same window ID
// are concatenated together at this time
//
// USHORT             char []
// Window ID          Query String
//-------------------------------------------------------------------------
FundCatL,      "UPDATE Fund "
FundCatL,      "SET Deleted = 1 "
FundCatL,      "WHERE FundKey IN (%FundKey{,%FundKey}) "
